jenkins:
  systemMessage: "Jenkins IDP - SQ-PJ4"
  numExecutors: 0
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "password"
        - id: "dev"
          password: "password"
        - id: "dev2"
          password: "password"

  authorizationStrategy:
    roleBased:
      roles:
        global:
          - name: "admin"
            description: "Jenkins administrators"
            permissions:
              - "Overall/Administer"
            entries:
              - user: "admin"
          - name: "Authenticated_Devs"
            description: "Authenticated Devs"
            permissions:
              - "Overall/Read"
              - "Job/Read"
              - "Job/Configure"
              - "Job/Build"
              - "Job/Workspace"
              - "Agent/Build"
              - "Agent/Connect"
              - "Agent/Build"
              - "Agent/Disconnect"
            entries:
              - user: "dev"
              - user: "dev2"

# Setting up Agents 
  nodes:
    - permanent:
        labelString: 'J_Agent j_agent'
        mode: NORMAL
        name: "J_Agent"
        numExecutors: 1
        remoteFS: "/home/ubuntu/j_agent"
        launcher:
          ssh:
            host: '10.0.0.11'
            port: 22
            credentialsId: ssh-Master-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false
    - permanent:
        labelString: "IDP idp"
        mode: NORMAL
        name: "IDP"
        numExecutors: 1
        remoteFS: "/home/ubuntu/idp_agent"
        launcher:
          ssh:
            host: '10.0.0.12'
            port: 22
            credentialsId: ssh-Master-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false
    - permanent:
        labelString: "Monitoring monitoring"
        mode: NORMAL
        name: "Monitoring"
        numExecutors: 1
        remoteFS: "/home/ubuntu/monitoring_agent"
        launcher:
          ssh:
            host: '10.0.0.13'
            port: 22
            credentialsId: ssh-Master-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false

credentials:
  system:
    domainCredentials:
      - credentials:
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: "ssh-Master-Controller"
              username: ubuntu
              description: "SSH passphrase with private key file. Private key provided"
              privateKeySource:
                directEntry:
                  privateKey: "${readFile:${SSH_PRIVATE_FILE_PATH}}"
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: "ssh-GitHub"
              username: Inframous
              description: "SSH Private Key for Git (Same one)"
              privateKeySource:
                directEntry:
                  privateKey: "${readFile:${SSH_PRIVATE_FILE_PATH}}"
          - aws:
              scope: GLOBAL
              id: "aws-Master-Controller"
              accessKey: "${AWS_ACCESS_KEY}"
              secretKey: "${AWS_SECRET_ACCESS_KEY}"
              description: "AWS Credentials"
          - usernamePassword:
              description: "Docker Hub Credentials"
              id: "docker-Creds"
              password: "<dockerPassword>"
              scope: GLOBAL
              username: "inframous"

# Testing this block
unclassified:
  location:
    adminAddress: "EMAIL_ADDRESS"
    url: "<CONTROLLER_IP>"

## End block

jobs:
  - file: /var/jenkins_home/pipelines/import_aws_test_pj4.groovy
  - file: /var/jenkins_home/pipelines/import_eks_deploy.groovy
  - file: /var/jenkins_home/pipelines/import_depIDP.groovy


security:
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "AcceptFirstConnectionStrategy"
  # scriptApproval:
  #   approvedScriptHashes:
  #     - "SHA512:070ddb95e01ee6432e6d0e043ceb17058b566fab0977bfd3855d13656dcede9a1ca2964e65de0a8e5c9345aafccdd3d863334a3000d1528603ef2733fe1ad487"
  #     - "SHA512:116b59a5f6269d93f69fcceb78282faab78757fa0b7e19aff36d71cf5cf51894db7c09d67735428698243abbaad0e38304f2fffbcc193cdee3b03c49bf595dd2"
  #     - "SHA512:2f59ef1c39119de7d7c7703cf195e25295fe2227c300c615505151dc18eaf423a672fd7d6f635b7b40b3f0166ab948b99954de7d963a819a5b979b58bc7a0941"
  #     - "SHA512:32512574320e5c008a461f91a048e054edc91efa19f2b133ac78e6f35e6a0bb3d1951252590ca149c767fe199c4c8fe8d6500d8b7f808a941e247652ed5655f9"
  #     - "SHA512:4e25c8880c06ff329f1c7d90ccbfe1810630279a5256d1d0f337ddb94377fcf9f62a467dff1b8bf4542ee2a3d337a12661bc7ec967ecb653384393b738681d80"
  #     - "SHA512:6bf72130cdca0c7e4c242315047e8de8d09b304755176c9326d07f12c5bce1b5af81034e3cbc18399fc1c178e3a3b3d62f55eacfef3f3a8be262ba8eddea34a4"
  #     - "SHA512:c63f0473531e41b7a598f0e8473da42a41cdd8a9db6f9255b510e35a563a8d3933bdccc8860bc670e19f5f1a1c36ba6cb5a2301dc1508a9983da015d73f4d8c1"
  #     - "SHA512:e4af4f6eaf46dba0fdc3e74057d57c26746d6f686dce2227cd29c1f82304bcc972ddc88eb4c921f4567a4ec47948ab66038d535a6ffa52a76a3d2689a2cfecd8"