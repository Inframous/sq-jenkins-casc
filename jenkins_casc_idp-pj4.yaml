jenkins:
  systemMessage: "Jenkins IDP - SQ-PJ4"
  numExecutors: 0
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "password"
        - id: "dev"
          password: "password"
        - id: "dev2"
          password: "password"

  authorizationStrategy:
    roleBased:
      roles:
        global:
          - name: "admin"
            description: "Jenkins administrators"
            permissions:
              - "Overall/Administer"
            entries:
              - user: "admin"
          - name: "Authenticated_Devs"
            description: "Authenticated Devs"
            permissions:
              - "Overall/Read"
              - "Job/Read"
              - "Job/Create"
              - "Job/Configure"
              - "Job/Build"
              - "Job/Workspace"
              - "Agent/Build"
              - "Agent/Connect"
              - "Agent/Build"
              - "Agent/Disconnect"
            entries:
              - user: "dev"
              - user: "dev2"

# Setting up Agents 
  nodes:
    - permanent:
        labelString: 'J_Agent j_agent'
        mode: NORMAL
        name: "J_Agent"
        numExecutors: 1
        remoteFS: "/home/ubuntu/j_agent"
        launcher:
          ssh:
            host: '10.0.0.11'
            port: 22
            credentialsId: ssh-Master-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false
    - permanent:
        labelString: "IDP idp"
        mode: NORMAL
        name: "IDP"
        numExecutors: 1
        remoteFS: "/home/ubuntu/idp_agent"
        launcher:
          ssh:
            host: '10.0.0.12'
            port: 22
            credentialsId: ssh-Master-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false
    - permanent:
        labelString: "Monitoring monitoring"
        mode: NORMAL
        name: "Monitoring"
        numExecutors: 1
        remoteFS: "/home/ubuntu/monitoring_agent"
        launcher:
          ssh:
            host: '10.0.0.13'
            port: 22
            credentialsId: ssh-Master-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false

credentials:
  system:
    domainCredentials:
      - credentials:
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: "ssh-Master-Controller"
              username: ubuntu
              description: "SSH passphrase with private key file. Private key provided"
              privateKeySource:
                directEntry:
                  privateKey: "${readFile:${SSH_PRIVATE_FILE_PATH}}"
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: "ssh-GitHub"
              username: Inframous
              description: "SSH Private Key for Git (Same one)"
              privateKeySource:
                directEntry:
                  privateKey: "${readFile:${SSH_PRIVATE_FILE_PATH}}"
          - aws:
              scope: GLOBAL
              id: "aws-Master-Controller"
              accessKey: "${AWS_ACCESS_KEY}"
              secretKey: "${AWS_SECRET_ACCESS_KEY}"
              description: "AWS Credentials"
          - usernamePassword:
              description: "Docker Hub Credentials"
              id: "docker-Creds"
              password: "<dockerPassword>"
              scope: GLOBAL
              username: "inframous"

# Testing this block
unclassified:
  location:
    adminAddress: "EMAIL_ADDRESS"
    url: "<CONTROLLER_IP>"

## End block

jobs:
  - file: /var/jenkins_home/pipelines/import_aws_test_pj4.groovy
  - file: /var/jenkins_home/pipelines/import_eks_deploy.groovy
  - file: /var/jenkins_home/pipelines/import_depIDP.groovy


security:
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "AcceptFirstConnectionStrategy"
  scriptApproval:
    approvedScriptHashes:
      - "SHA512:24135503c31931a5e923adbec4a1884ac86d6ff316a242c983e009d327935aa63e85ff8e3559c681c5988396c88ecd65691773a30dc497923ae258c66a68f7ae"
      - "SHA512:3f205299bef2fe3329258a42f2c60d332cc35ccb41a3ca0512d7869c6aff4561ff708c48123b4f7c3dec33ccca30d54fb8b9b51b5bc7070f96236d11a3f0bdcb"
      - "SHA512:85a6c6128932df2d55efdacaa6700c36d582905da2190884dc18942a2fcb114f56ce06ec240cf05405a1ab563dbb8a58b331302a24f0d68dbf939fce9977e79a"
      - "SHA512:ae5f7eaf413024b0c6f7d4ce2537d9d60afd1bb1c6fa5466f0729aef4fc6437f2d786bd5789ff24be8c2be6b939f936c07cd0f664d549f357a2fd9f781662278"
      - "SHA512:bf0b39edf904ae150562bfa93a73dbae3d02a2d40fd9be08ed6923bb2ffed4e7bf6d9cdcf91fbf2f3910a21fa879108eb82f29e7feb7ab421c21e10c7afb1e7d"
      - "SHA512:d072b30bedf8c00faf3781ab69f93953ebdd08a3cc776b2f0ae4971303076c23321673cbd4a3528ace8711fe91c65acb02b9436f9993ae3a30c4a51017b81a1a"
      - "SHA512:e722aeb2534d797a0268ca953752dea35a96f4f4dd8dc6021ea3204eae66a9d4fbd0594e4d3a350821a25b10c8fb4064479b89d32fd2df7fd2224385d4a469ec"