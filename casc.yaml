jenkins:
  numExecutors: 1
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "admin"
        - id: "dev"
          password: "dev"
  # authorizationStrategy: loggedInUsersCanDoAnything
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Job/Build:dev"
        - "Job/Cancel:dev"
        - "Job/Read:dev"
        - "Job/Workspace:dev"
        - "Overall/Administer:admin"
        - "Overall/Read:authenticated"
        - "Run/Replay:dev"
        - "Run/Update:dev"
  

# Setting up Agent 
  nodes:
    - permanent:
        labelString: "Prod1"
        mode: NORMAL
        name: "Prod1"
        numExecutors: 1
        remoteFS: "/home/ubuntu/jenkins_agent1"
        launcher:
          ssh:
            host: '<prod1_ip>'
            port: 22
            credentialsId: ssh-Jenkins-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false
    - permanent:
        labelString: "prod2_ip"
        mode: NORMAL
        name: "Prod2"
        numExecutors: 1
        remoteFS: "/home/ubuntu/jenkins_agent2"
        launcher:
          ssh:
            host: '<prod2_ip>'
            port: 22
            credentialsId: ssh-Jenkins-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false
## Testing this block

unclassified:
  location:
    adminAddress: "EMAIL_ADDRESS"
    url: "CONTROLLER_IP"
## End block

# Set up credentials
credentials:
  system:
    domainCredentials:
      - credentials:
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: "ssh-Jenkins-Controller"
              username: ubuntu
              description: "SSH passphrase with private key file. Private key provided"
              privateKeySource:
                directEntry:
                  privateKey: "${readFile:${SSH_PRIVATE_FILE_PATH}}"
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: "ssh-GitHub"
              username: Inframous
              description: "SSH Private Key for Git (Same one)"
              privateKeySource:
                directEntry:
                  privateKey: "${readFile:${SSH_PRIVATE_FILE_PATH}}"
          - aws:
              scope: GLOBAL
              id: "aws-Jenkins-Controller"
              accessKey: "${AWS_ACCESS_KEY}"
              secretKey: "${AWS_SECRET_ACCESS_KEY}"
              description: "AWS Credentials"
jobs:
  - file: /var/jenkins_home/pipelines/aws-test.groovy
  - file: /var/jenkins_home/pipelines/aws-deploy.groovy
