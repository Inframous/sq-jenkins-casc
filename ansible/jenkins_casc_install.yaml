---
- name: Custom Jenkins Install
  hosts: {{ HOSTS }}
  vars:
    - gitEmail: "will be populated by bash script"
    - CONTROLLER_IP: "will be populated by bash script"
    - AGENT_IP: "will be populated by bash script"
    - awsID: "will be populated by bash script"
    - awsSECRET: "will be populated by bash script"
  become: false
  remote_user: ubuntu
  tasks: 
    - name: Cloning Jenkins-CasC Repo
      ansible.builtin.git:
        repo: https://github.com/Inframous/sq-jenkins-casc.git
        dest: ~/sq-jenkins-casc
        single_branch: yes
        version: main
      ignore_errors: true
    - name: Copy Private Key for the CasC build.
      ansible.builtin.copy:
        src: ../ssh-key/master-controller
        dest: ~/sq-jenkins-casc/master-controller
        owner: ubuntu
        group: ubuntu
        mode: '0600'      
    - name: Injecting aws ID
      replace:
        path: ~/sq-jenkins-casc/Dockerfile
        regexp: '<aws_access_key_id>'
        replace: "{{ awsID }}"
    - name: Injecting aws SECRET
      replace:
        path: ~/sq-jenkins-casc/Dockerfile
        regexp: '<aws_secret_access_key>'
        replace: "{{ awsSECRET }}"
    - name: Injecting Jenkins Address (IP)
      replace:
        path: ~/sq-jenkins-casc/jenkins_casc_main.yaml
        regexp: '<CONTROLLER_IP>'
        replace: "http://{{ CONTROLLER_IP }}:8080/"
    - name: Injecting Email Addresss
      replace:
        path: ~/sq-jenkins-casc/jenkins_casc_main.yaml
        regexp: 'EMAIL_ADDRESS'
        replace: "{{ gitEmail }}"
    - name: Change file ownership, group and permissions to /var/run/docker.sock'
      ansible.builtin.file:
        path: /var/run/docker.sock
        owner: root
        group: docker
        mode: '0666'
    - name: "Building and Deploying The Container"
      shell: |
        cd ~/sq-jenkins-casc
        sudo docker build -t "jen-casc:latest" .
        sudo docker compose up -d
    # - name: Creating SSH Folder (.ssh) inside the Container.
    #   shell: |
    #     sudo docker exec -i jen-casc mkdir -p /root/.ssh/

    # #    sudo docker exec -i jen-casc mkdir -p /var/jenknis_home/.ssh/
    # - name: Injecting J_Agent key
    #   shell: |
    #     sudo docker exec -i jen-casc bash -c "ssh-keyscan -t rsa 172.31.5.6 >> /root/.ssh/known_hosts"
    # #     sudo docker exec -i jen-casc bash -c "ssh-keyscan -t rsa 172.31.5.6 >> /root/.ssh/known_hosts"
    # #     sudo docker exec -i jencasc bash -c "ssh-keyscan -t rsa 10.123.1.12 >> /root/.ssh/known_hosts"
    # #     sudo docker exec -i jencasc bash -c "ssh-keyscan -t rsa 10.123.1.13 >> /root/.ssh/known_hosts"
    # - name: Adding GitHub Fingerprint
    #   shell: |
    #     sudo docker exec -i jen-casc bash -c 'ssh-keyscan -t rsa  www.github.com >> /root/.ssh/known_hosts'
    #     sudo docker exec -i jen-casc bash -c 'echo "github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl" >> /root/.ssh/known_hosts'
    #     sudo docker exec -i jen-casc bash -c 'echo "github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=" >> /root/.ssh/known_hosts'
    #     sudo docker exec -i jen-casc bash -c 'echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=" >> /root/.ssh/known_hosts'



    - name: "Final Cleanup. (so no secrets will be left behind)"
      shell: |
        sudo rm -r sq-jenkins-casc