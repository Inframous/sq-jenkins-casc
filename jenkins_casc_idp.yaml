jenkins:
  systemMessage: "Welcome to Jenkins-IDP (sq-Project-2), you may import the jobs."
  numExecutors: 0
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "password"
        - id: "dev"
          password: "password"
        - id: "dev2"
          password: "password"

  authorizationStrategy:
    roleBased:
      roles:
        global:
          - name: "admin"
            description: "Jenkins administrators"
            permissions:
              - "Overall/Administer"
            assignments:
              - "admin"
          - name: "Authenticated_Devs"
            description: "Authenticated Devs"
            permissions:
              - "Overall/Read"
              - "Job/Read"
              - "Job/Configure"
              - "Job/Build"
              - "Job/Workspace"
              - "Agent/Build"
              - "Agent/Connect"
              - "Agent/Build"
              - "Agent/Disconnect"

            assignments:
              - "authenticated"

# Setting up Agents 
  nodes:
    - permanent:
        labelString: 'J_Agent j_agent'
        mode: NORMAL
        name: "J_Agent"
        numExecutors: 1
        remoteFS: "/home/ubuntu/j_agent"
        launcher:
          ssh:
            host: '10.0.0.11'
            port: 22
            credentialsId: ssh-Master-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false
    - permanent:
        labelString: "IDP idp"
        mode: NORMAL
        name: "IDP"
        numExecutors: 1
        remoteFS: "/home/ubuntu/idp_agent"
        launcher:
          ssh:
            host: '10.0.0.12'
            port: 22
            credentialsId: ssh-Master-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false
    - permanent:
        labelString: "Prod1 prod1"
        mode: NORMAL
        name: "Prod1"
        numExecutors: 1
        remoteFS: "/home/ubuntu/prod1_agent"
        launcher:
          ssh:
            host: '10.0.0.13'
            port: 22
            credentialsId: ssh-Master-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false
    - permanent:
        labelString: "Prod2 prod2"
        mode: NORMAL
        name: "Prod2"
        numExecutors: 1
        remoteFS: "/home/ubuntu/prod2_agent"
        launcher:
          ssh:
            host: '10.0.0.14'
            port: 22
            credentialsId: ssh-Master-Controller
            launchTimeoutSeconds: 60
            maxNumRetries: 3
            retryWaitTime: 30
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false

credentials:
  system:
    domainCredentials:
      - credentials:
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: "ssh-Master-Controller"
              username: ubuntu
              description: "SSH passphrase with private key file. Private key provided"
              privateKeySource:
                directEntry:
                  privateKey: "${readFile:${SSH_PRIVATE_FILE_PATH}}"
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: "ssh-GitHub"
              username: Inframous
              description: "SSH Private Key for Git (Same one)"
              privateKeySource:
                directEntry:
                  privateKey: "${readFile:${SSH_PRIVATE_FILE_PATH}}"
          - aws:
              scope: GLOBAL
              id: "aws-Master-Controller"
              accessKey: "${AWS_ACCESS_KEY}"
              secretKey: "${AWS_SECRET_ACCESS_KEY}"
              description: "AWS Credentials"

# Testing this block
unclassified:
  location:
    adminAddress: "EMAIL_ADDRESS"
    url: "<CONTROLLER_IP>"

## End block

jobs:
  - file: /var/jenkins_home/pipelines/import_aws_test.groovy
  - file: /var/jenkins_home/pipelines/import_aws_deploy.groovy

security:
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "AcceptFirstConnectionStrategy"
  # scriptApproval:
  #   approvedScriptHashes:
  #     - "SHA512:2403ede9db3751c6b8e6b1f67825920bb906beefbfdfe8035b89bf374fefc8db2d29ef8946a489a70e45485d52af21f6d39c90255e76720d5c484d7d016d61b7"
  #     - "SHA512:1b6c00e4a114776c5acf92ea71dfe23dfbf4010ad0cc15131cd70d782fefe38e7d6561bc8673c8d92188374b17fb7fe569398a85a276a1c5926b1ce570e72879"



